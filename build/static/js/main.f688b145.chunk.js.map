{"version":3,"sources":["components/NavBar.js","components/Pomo.js","components/Quizlet.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","useStyles","makeStyles","theme","root","display","flexWrap","margin","spacing","width","height","textAlign","Pomo","classes","className","Paper","elevation","style","component","initialTime","lastUnit","direction","start","resume","pause","stop","reset","timerState","Fragment","Minutes","Seconds","onClick","src","require","firebase","initializeApp","apiKey","authDomain","App","state","isSignedIn","uiConfig","callbacks","signInSuccess","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","componentDidMount","onAuthStateChanged","user","setState","this","type","firebaseAuth","Grid","container","sm","item","Quizlet","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qQAkBeA,EAbA,WACX,OACI,8BACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,UAAlC,8C,iCCCVC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,QAAS,OACTC,SAAU,OACV,QAAS,CACPC,OAAQJ,EAAMK,QAAQ,GACtBC,MAAON,EAAMK,QAAQ,KACrBE,OAAQP,EAAMK,QAAQ,KAExBG,UAAW,SACXf,SAAU,gBAIC,SAASgB,IAEtB,IAAMC,EAAUZ,IAEhB,OACE,qBAAKa,UAAWD,EAAQT,KAAxB,SAEE,cAACW,EAAA,EAAD,CAAOC,UAAW,EAAlB,SACI,qBAAKC,MAAO,CAACV,OAAQ,cAAeX,SAAU,YAA9C,SACE,cAACE,EAAA,EAAD,CACEC,QAAQ,KACRmB,UAAU,KAFZ,SAKE,cAAC,IAAD,CACEC,YAAa,OACbC,SAAS,IACTC,UAAU,WAHZ,SAKG,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,OAAQC,EAAlB,EAAkBA,MAAOC,EAAzB,EAAyBA,KAAMC,EAA/B,EAA+BA,MAAOC,EAAtC,EAAsCA,WAAtC,OACG,eAAC,IAAMC,SAAP,WACI,gCACI,cAAC,IAAMC,QAAP,IADJ,IAEI,cAAC,IAAMC,QAAP,OAEJ,8BAAMH,IACN,uBACA,gCACI,wBAAQI,QAAST,EAAjB,mBACA,wBAAQS,QAASP,EAAjB,mBACA,wBAAQO,QAASR,EAAjB,oBACA,wBAAQQ,QAASN,EAAjB,kBACA,wBAAQM,QAASL,EAAjB,oC,YChDbhC,EAPA,WACX,OACI,8BACI,wBAAQsC,IAAI,iEAAiEtB,OAAO,MAAMD,MAAM,Y,yBCG3FwB,EAAQ,IAEzBC,UAASC,cAAc,CACrBC,OAAQ,0CACRC,WAAY,kC,IAgECC,E,4MA5DbC,MAAQ,CAAEC,YAAa,G,EACvBC,SAAW,CACTC,UAAW,CACTC,cAAe,kBAAM,IAcvBC,WAAY,QAEZC,cAAe,CAEbX,UAASY,KAAKC,mBAAmBC,YACjCd,UAASY,KAAKG,qBAAqBD,c,EAIvCE,kBAAoB,WAClBhB,UAASY,OAAOK,oBAAmB,SAAAC,GACjC,EAAKC,SAAS,CAACb,aAAaY,Q,4CAIhC,WACE,OACE,gCACGE,KAAKf,MAAMC,WAAc,uBAAOe,KAAK,WAC9B,cAAC,IAAD,CACAd,SAAUa,KAAKb,SACfe,aAActB,UAASY,SAI/B,cAAC,EAAD,IAEA,eAACW,EAAA,EAAD,CAAMC,WAAS,EAACC,GAAI,GAApB,UAEE,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACD,GAAI,EAAf,SACE,cAACE,EAAD,MAGF,cAACJ,EAAA,EAAD,CAAMG,MAAI,EAACD,GAAI,EAAf,SACE,cAAC/C,EAAD,gB,GApDMkD,aCHHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDC/B,EAAQ,IACNA,EAAQ,IAEzBuC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f688b145.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\n\nconst NavBar = () => {\n    return(\n        <div>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"title\" color=\"inherit\">\n                StudyFlow — Pomodoro\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        </div>\n    )\n}\nexport default NavBar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timer from 'react-compound-timer';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n      width: theme.spacing(100),\r\n      height: theme.spacing(50),\r\n    },\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nexport default function Pomo() {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <Paper elevation={3}>\r\n          <div style={{margin: '25% 0 0 25%', position: 'absolute'}}>\r\n            <Typography \r\n              variant=\"h4\"\r\n              component=\"h4\"\r\n              \r\n            >\r\n              <Timer\r\n                initialTime={(25 * 60 - 1) * 1000}\r\n                lastUnit=\"m\"\r\n                direction=\"backward\"\r\n                >\r\n                {({ start, resume, pause, stop, reset, timerState }) => (\r\n                    <React.Fragment>\r\n                        <div>\r\n                            <Timer.Minutes />:\r\n                            <Timer.Seconds />\r\n                        </div>\r\n                        <div>{timerState}</div>\r\n                        <br />\r\n                        <div>\r\n                            <button onClick={start}>Start</button>\r\n                            <button onClick={pause}>Pause</button>\r\n                            <button onClick={resume}>Resume</button>\r\n                            <button onClick={stop}>Stop</button>\r\n                            <button onClick={reset}>Reset</button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                )}\r\n            </Timer>\r\n          </Typography>\r\n        </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     minWidth: 275,\r\n//   },\r\n//   bullet: {\r\n//     display: 'inline-block',\r\n//     margin: '0 2px',\r\n//     transform: 'scale(0.8)',\r\n//   },\r\n//   title: {\r\n//     fontSize: 14,\r\n//   },\r\n//   pos: {\r\n//     marginBottom: 12,\r\n//   },\r\n// });\r\n\r\n// export default function OutlinedCard() {\r\n//   const classes = useStyles();\r\n//   const bull = <span className={classes.bullet}>•</span>;\r\n\r\n//   return (\r\n//     <Card className={classes.root} variant=\"outlined\">\r\n//       <CardContent>\r\n//         <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n//           Word of the Day\r\n//         </Typography>\r\n//         <Typography variant=\"h5\" component=\"h2\">\r\n//           be{bull}nev{bull}o{bull}lent\r\n//         </Typography>\r\n//         <Typography className={classes.pos} color=\"textSecondary\">\r\n//           adjective\r\n//         </Typography>\r\n//         <Typography variant=\"body2\" component=\"p\">\r\n//           well meaning and kindly.\r\n//           <br />\r\n//           {'\"a benevolent smile\"'}\r\n//         </Typography>\r\n//       </CardContent>\r\n//       <CardActions>\r\n//         <Button size=\"small\">Learn More</Button>\r\n//       </CardActions>\r\n//     </Card>\r\n//   );\r\n// }\r\n","import React from 'react'\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <div>\r\n            <iframe src=\"https://quizlet.com/555471868/flashcards/embed?i=3iac9z&x=1jj1\" height=\"700\" width=\"100%\" ></iframe>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import React, { Component } from 'react'\r\nimport NavBar from './components/NavBar'\r\nimport Pomo from './components/Pomo'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Quizlet from './components/Quizlet'\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n\r\nvar firebaseui = require('firebaseui');\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyD1OtCoO2em2sBOiv0pkC4nkndReovwCdk',\r\n  authDomain: 'studyflow-web.firebaseapp.com'\r\n})\r\n\r\nclass App extends Component {\r\n  state = { isSignedIn : false }\r\n  uiConfig = {\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n      // signInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n        // User successfully signed in.\r\n        // Return type determines whether we continue the redirect automatically\r\n        // or whether we leave that to developer to handle.\r\n        // return true;\r\n      // },\r\n      // uiShown: function() {\r\n        // The widget is rendered.\r\n        // Hide the loader.\r\n        // document.getElementById('loader').style.display = 'none';\r\n      // }\r\n    },\r\n    // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\r\n    signInFlow: 'popup',\r\n    // signInSuccessUrl: '<url-to-redirect-to-on-success>',\r\n    signInOptions: [\r\n      // Leave the lines as is for the providers you want to offer your users.\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    ]\r\n  }\r\n\r\n  componentDidMount = ()=>{\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({isSignedIn:!!user})\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {this.state.isSignedIn ? (<input type='hidden' />) : (\r\n                <StyledFirebaseAuth\r\n                uiConfig={this.uiConfig}\r\n                firebaseAuth={firebase.auth()}\r\n                />\r\n            )}\r\n\r\n        <NavBar />\r\n\r\n        <Grid container sm={12}>\r\n\r\n          <Grid item sm={6}>\r\n            <Quizlet />\r\n          </Grid>\r\n\r\n          <Grid item sm={6}>\r\n            <Pomo />\r\n          </Grid>\r\n          \r\n        </Grid>\r\n\r\n      </div>\r\n    )\r\n  }\r\n}\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nvar firebase = require('firebase');\nvar firebaseui = require('firebaseui');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}