{"version":3,"sources":["components/wall-clock.png","components/NavBar.js","components/Pomo.js","components/Quizlet.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","menuButton","marginRight","marginLeft","theme","createMuiTheme","palette","primary","main","mainGradient","NavBar","classes","AppBar","position","style","background","Toolbar","className","src","Icon","alt","width","height","Typography","variant","color","root","display","flexWrap","margin","spacing","textAlign","buttonStyle","Pomo","buttonClasses","Paper","elevation","class","component","initialTime","lastUnit","direction","start","pause","resume","reset","stop","timerState","Fragment","Minutes","formatValue","time","String","length","Seconds","Button","onClick","event","require","firebase","initializeApp","apiKey","authDomain","typography","fontFamily","join","App","state","isSignedIn","uiConfig","callbacks","signInSuccess","signInFlow","signInOptions","auth","GoogleAuthProvider","PROVIDER_ID","FacebookAuthProvider","componentDidMount","onAuthStateChanged","user","setState","ThemeProvider","this","type","firebaseAuth","Grid","container","sm","item","Quizlet","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d78b0795.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/wall-clock.07387d29.png\";","import React from 'react'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Icon from './wall-clock.png'\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport ReactDOM from 'react-dom';\r\nimport GoogleLogin from 'react-google-login';\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    menuButton: {\r\n        marginRight: 16,\r\n        marginLeft: -12\r\n    },\r\n})\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: '#ff4400',\r\n      mainGradient: \"linear-gradient(to top left, #00cc99 -76%, #3366ff 95%)\",\r\n    },\r\n  },\r\n});\r\n\r\n\r\nconst NavBar = () => {\r\n    const classes = useStyles()\r\n    return(\r\n        <div>\r\n        <AppBar position=\"static\"\r\n            style={{ background: theme.palette.primary.mainGradient }}\r\n        >\r\n            <Toolbar>\r\n\r\n                <img className={classes.menuButton}\r\n                    src={Icon} alt=\"Italian Trulli\" width=\"40\" height=\"40\"/>\r\n\r\n                <Typography variant=\"h5\" color=\"inherit\">\r\n                    StudyFlow\r\n                </Typography>\r\n\r\n                {/* <GoogleLogin\r\n                  buttonText=\"Login\"\r\n                /> */}\r\n                \r\n\r\n            </Toolbar>\r\n        </AppBar>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timer from 'react-compound-timer';\r\nimport Card from '@material-ui/core/Card';\r\n// import CardActions from '@material-ui/core/CardActions';\r\n// import CardContent from '@material-ui/core/CardContent';\r\n// import Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Paper from '@material-ui/core/Paper';\r\nimport './Pomo.css';\r\nimport Button from '@material-ui/core/Button';\r\n\r\n// import openSans from \"@fontsource/open-sans\"\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  // Timer display CSS\r\n  root: {\r\n    display: 'flex',\r\n    flexWrap: 'wrap',\r\n    '& > *': {\r\n      margin: theme.spacing(2),\r\n      width: theme.spacing(100),\r\n      height: theme.spacing(40),\r\n    },\r\n    textAlign: 'center',\r\n    position: 'relative',\r\n  },\r\n}));\r\n\r\nconst buttonStyle = makeStyles((theme) => ({\r\n  root: {\r\n    '& > *': {\r\n      margin: theme.spacing(1),\r\n    },\r\n  },\r\n}));\r\n\r\nexport default function Pomo() {\r\n\r\n  const classes = useStyles();\r\n  const buttonClasses = buttonStyle();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper elevation={3}>\r\n          <div class=\"container\">\r\n            <div class=\"child\">\r\n              <Typography\r\n                variant=\"h1\"\r\n                component=\"h2\"\r\n              >\r\n                <Timer\r\n                  initialTime={(2 * 60) * 1000}\r\n                  lastUnit=\"m\"\r\n                  direction=\"backward\"\r\n                >\r\n                  {({ start, resume, pause, stop, reset, timerState }) => (\r\n                    <React.Fragment>\r\n                        <div>\r\n                          <Timer.Minutes formatValue={(time) => String(time).length > 1 ? time : '0' + time}/>:\r\n                          <Timer.Seconds formatValue={(time) => String(time).length > 1 ? time : '0' + time}/>\r\n                        </div>\r\n                        <div className={buttonClasses.root}>\r\n                            <Button variant=\"contained\" onClick={start}>Start</Button>\r\n                            <Button variant=\"contained\" color=\"#00CA4E\" onClick={pause}>Pause</Button>\r\n                            <Button variant=\"contained\" color=\"secondary\" onClick={function(event){ pause(); reset();}}>Reset</Button>\r\n                        </div>\r\n                    </React.Fragment>\r\n                  )}\r\n                </Timer>\r\n              </Typography>\r\n            </div>\r\n          </div>\r\n      </Paper>\r\n    </div>\r\n  );\r\n}\r\n// const useStyles = makeStyles({\r\n//   root: {\r\n//     minWidth: 275,\r\n//   },\r\n//   bullet: {\r\n//     display: 'inline-block',\r\n//     margin: '0 2px',\r\n//     transform: 'scale(0.8)',\r\n//   },\r\n//   title: {\r\n//     fontSize: 14,\r\n//   },\r\n//   pos: {\r\n//     marginBottom: 12,\r\n//   },\r\n// });\r\n\r\n// export default function OutlinedCard() {\r\n//   const classes = useStyles();\r\n//   const bull = <span className={classes.bullet}>â€¢</span>;\r\n\r\n//   return (\r\n//     <Card className={classes.root} variant=\"outlined\">\r\n//       <CardContent>\r\n//         <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\r\n//           Word of the Day\r\n//         </Typography>\r\n//         <Typography variant=\"h5\" component=\"h2\">\r\n//           be{bull}nev{bull}o{bull}lent\r\n//         </Typography>\r\n//         <Typography className={classes.pos} color=\"textSecondary\">\r\n//           adjective\r\n//         </Typography>\r\n//         <Typography variant=\"body2\" component=\"p\">\r\n//           well meaning and kindly.\r\n//           <br />\r\n//           {'\"a benevolent smile\"'}\r\n//         </Typography>\r\n//       </CardContent>\r\n//       <CardActions>\r\n//         <Button size=\"small\">Learn More</Button>\r\n//       </CardActions>\r\n//     </Card>\r\n//   );\r\n// }\r\n","import React from 'react'\r\n\r\nconst NavBar = () => {\r\n    return(\r\n        <div>\r\n            <iframe src=\"https://quizlet.com/555471868/flashcards/embed?i=3iac9z&x=1jj1\" height=\"600\" width=\"100%\" ></iframe>\r\n        </div>\r\n    )\r\n}\r\nexport default NavBar;","import React, { Component } from 'react'\r\nimport NavBar from './components/NavBar'\r\nimport Pomo from './components/Pomo'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Quizlet from './components/Quizlet'\r\nimport firebase from 'firebase'\r\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'\r\n\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\n// import './Styles/App.css';\r\nvar firebaseui = require('firebaseui');\r\n\r\nfirebase.initializeApp({\r\n  apiKey: 'AIzaSyD1OtCoO2em2sBOiv0pkC4nkndReovwCdk',\r\n  authDomain: 'studyflow-web.firebaseapp.com'\r\n})\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: [\r\n      // '-apple-system',\r\n      'BlinkMacSystemFont',\r\n      // '\"Segoe UI\"',\r\n      // 'Roboto',\r\n      // '\"Source Sans Pro\"',\r\n      // '\"Helvetica Neue\"',\r\n      // 'Arial',\r\n      // 'sans-serif',\r\n      // '\"Apple Color Emoji\"',\r\n      // '\"Segoe UI Emoji\"',\r\n      // '\"Segoe UI Symbol\"',\r\n    ].join(','),\r\n  },\r\n});\r\n\r\nclass App extends Component {\r\n\r\n  state = { isSignedIn : false }\r\n  uiConfig = {\r\n    callbacks: {\r\n      signInSuccess: () => false\r\n      // signInSuccessWithAuthResult: function(authResult, redirectUrl) {\r\n        // User successfully signed in.\r\n        // Return type determines whether we continue the redirect automatically\r\n        // or whether we leave that to developer to handle.\r\n        // return true;\r\n      // },\r\n      // uiShown: function() {\r\n        // The widget is rendered.\r\n        // Hide the loader.\r\n        // document.getElementById('loader').style.display = 'none';\r\n      // }\r\n    },\r\n    // Will use popup for IDP Providers sign-in flow instead of the default, redirect.\r\n    signInFlow: 'popup',\r\n    // signInSuccessUrl: '<url-to-redirect-to-on-success>',\r\n    signInOptions: [\r\n      // Leave the lines as is for the providers you want to offer your users.\r\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\r\n      firebase.auth.FacebookAuthProvider.PROVIDER_ID,\r\n    ]\r\n  }\r\n\r\n  componentDidMount = ()=>{\r\n    firebase.auth().onAuthStateChanged(user => {\r\n      this.setState({isSignedIn:!!user})\r\n    })\r\n  }\r\n\r\n  // Start normal app\r\n  render() {\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <div>\r\n          {this.state.isSignedIn ? (<input type='hidden' />) : (\r\n                  <StyledFirebaseAuth\r\n                  uiConfig={this.uiConfig}\r\n                  firebaseAuth={firebase.auth()}\r\n                  />\r\n              )}\r\n\r\n          <NavBar />\r\n\r\n          <Grid container sm={12}>\r\n\r\n            <Grid item sm={6}>\r\n              <Quizlet />\r\n            </Grid>\r\n\r\n            <Grid item sm={6}>\r\n              <Pomo />\r\n            </Grid>\r\n            \r\n          </Grid>\r\n\r\n        </div>\r\n      </ThemeProvider>\r\n    )\r\n  }\r\n}\r\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nvar firebase = require('firebase');\r\nvar firebaseui = require('firebaseui');\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}