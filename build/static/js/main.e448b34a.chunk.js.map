{"version":3,"sources":["components/NavBar.js","components/Course.js","components/CourseList.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","variant","color","Course","props","console","log","course","Card","CardMedia","style","height","paddingTop","image","fields","courseImage","file","url","title","CardContent","gutterBottom","component","description","CardActions","Button","size","href","target","client","contentful","space","accessToken","App","Component","src","width","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAiBeA,EAbA,WACX,OACI,8BACA,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACI,cAACC,EAAA,EAAD,UACI,cAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,MAAM,UAAlC,2D,uEC2BDC,EA5BA,SAACC,GAEZ,OADAC,QAAQC,IAAIF,GAER,8BACMA,EAAMG,OACJ,eAACC,EAAA,EAAD,WACI,cAACC,EAAA,EAAD,CAAWC,MAAO,CAACC,OAAQ,EAAGC,WAAY,UAC1CC,MAAOT,EAAMG,OAAOO,OAAOC,YAAYD,OAAOE,KAAKC,IACnDC,MAAOd,EAAMG,OAAOO,OAAOI,QAE3B,eAACC,EAAA,EAAD,WACA,cAACnB,EAAA,EAAD,CAAYoB,cAAY,EAACnB,QAAQ,WAAWoB,UAAU,KAAtD,SACKjB,EAAMG,OAAOO,OAAOI,QAEzB,cAAClB,EAAA,EAAD,CAAYqB,UAAU,IAAtB,SACKjB,EAAMG,OAAOO,OAAOQ,iBAGzB,cAACC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQvB,MAAM,UAAUwB,KAAMtB,EAAMG,OAAOO,OAAOG,IAAKU,OAAO,SAA3E,wBAKJ,QCvBVC,EAASC,eAAwB,CACnCC,MAHa,+BAIbC,YAHiB,qCCMNC,GDAWC,Y,4JCTxB,WACE,OACE,gCACE,cAAC,EAAD,IACA,wBAAQC,IAAI,iEAAiEvB,OAAO,OAAOwB,MAAM,e,GALvFF,cCQHG,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.e448b34a.chunk.js","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nconst NavBar = () => {\n    return(\n        <div>\n        <AppBar position=\"static\">\n            <Toolbar>\n                <Typography variant=\"title\" color=\"inherit\">\n                React & Material-UI Sample Application\n                </Typography>\n            </Toolbar>\n        </AppBar>\n        </div>\n    )\n}\nexport default NavBar;","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Button from '@material-ui/core/Button'\nimport Typography from '@material-ui/core/Typography'\n\nconst Course = (props) => {\n    console.log(props)\n    return(\n        <div>\n            { props.course ? (\n                <Card >\n                    <CardMedia style={{height: 0, paddingTop: '56.25%'}}\n                    image={props.course.fields.courseImage.fields.file.url}\n                    title={props.course.fields.title}\n                    />\n                    <CardContent>\n                    <Typography gutterBottom variant=\"headline\" component=\"h2\">\n                        {props.course.fields.title}\n                    </Typography>\n                    <Typography component=\"p\">\n                        {props.course.fields.description}\n                    </Typography>\n                    </CardContent>\n                    <CardActions>\n                    <Button size=\"small\" color=\"primary\" href={props.course.fields.url} target=\"_blank\">\n                        Pause\n                    </Button>\n                    </CardActions>\n                </Card>\n            ) : null}\n        </div>\n    )\n}\nexport default Course","import React, { Component } from 'react'\nimport Grid from '@material-ui/core/Grid';\nimport TextField from '@material-ui/core/TextField';\n\nimport * as contentful from 'contentful'\nimport Course from '../components/Course'\n\nconst SPACE_ID = '[INSERT CONTENTFUL SPACE ID]'\nconst ACCESS_TOKEN = '[INSERT CONTENTFUL ACCESS TOKEN]'\nconst client = contentful.createClient({\n    space: SPACE_ID,\n    accessToken: ACCESS_TOKEN\n})\n\nclass CoursesList extends Component {\n    state = {\n        courses: [],\n        searchString: ''\n    }\n    constructor() {\n        super()\n        this.getCourses()\n    }\n    getCourses = () => {\n        client.getEntries({\n            content_type: 'course',\n            query: this.state.searchString\n        })\n        .then((response) => {\n            this.setState({courses: response.items})\n            console.log(this.state.courses)\n        })\n        .catch((error) => {\n          console.log(\"Error occurred while fetching Entries\")\n          console.error(error)\n        })\n    }\n\n    onSearchInputChange = (event) => {\n        console.log(\"Search changed ...\" + event.target.value)\n        if (event.target.value) {\n            this.setState({searchString: event.target.value})\n        } else {\n            this.setState({searchString: ''})\n        }\n        this.getCourses()\n    }\n    \n    render() {\n        return (\n            <div>\n                { this.state.courses ? (\n                    <div>\n                        <TextField style={{padding: 24}}\n                            id=\"searchInput\"\n                            placeholder=\"Search for Courses\"   \n                            margin=\"normal\"\n                            onChange={this.onSearchInputChange}\n                            />\n                        <Grid container spacing={24} style={{padding: 24}}>\n                            { this.state.courses.map(currentCourse => (\n                                <Grid item xs={12} sm={6} lg={4} xl={3}>\n                                    <Course course={currentCourse} />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </div>\n                ) : \"No courses found\" }\n            </div>\n        )\n    }\n}\nexport default CoursesList;","import React, { Component } from 'react'\nimport NavBar from './components/NavBar'\nimport CourseList from './components/CourseList'\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <NavBar />\n        <iframe src=\"https://quizlet.com/555471868/flashcards/embed?i=3iac9z&x=1jj1\" height=\"1000\" width=\"50%\" ></iframe>\n      </div>\n    )\n  }\n}\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}